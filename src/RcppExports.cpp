// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// empTraceVariogram
NumericMatrix empTraceVariogram(NumericMatrix Coords, NumericMatrix Fs, NumericVector Lags, NumericMatrix Directions, double distTolerance, double Step, double angTolerance, bool isPartial);
RcppExport SEXP _fdagstat_empTraceVariogram(SEXP CoordsSEXP, SEXP FsSEXP, SEXP LagsSEXP, SEXP DirectionsSEXP, SEXP distToleranceSEXP, SEXP StepSEXP, SEXP angToleranceSEXP, SEXP isPartialSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Coords(CoordsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Fs(FsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Lags(LagsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Directions(DirectionsSEXP);
    Rcpp::traits::input_parameter< double >::type distTolerance(distToleranceSEXP);
    Rcpp::traits::input_parameter< double >::type Step(StepSEXP);
    Rcpp::traits::input_parameter< double >::type angTolerance(angToleranceSEXP);
    Rcpp::traits::input_parameter< bool >::type isPartial(isPartialSEXP);
    rcpp_result_gen = Rcpp::wrap(empTraceVariogram(Coords, Fs, Lags, Directions, distTolerance, Step, angTolerance, isPartial));
    return rcpp_result_gen;
END_RCPP
}
// empTraceCrossVariogram
NumericMatrix empTraceCrossVariogram(NumericMatrix Coords, NumericMatrix Fs, NumericMatrix SFs, NumericVector Lags, NumericMatrix Directions, double distTolerance, double Step, double angTolerance);
RcppExport SEXP _fdagstat_empTraceCrossVariogram(SEXP CoordsSEXP, SEXP FsSEXP, SEXP SFsSEXP, SEXP LagsSEXP, SEXP DirectionsSEXP, SEXP distToleranceSEXP, SEXP StepSEXP, SEXP angToleranceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Coords(CoordsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Fs(FsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type SFs(SFsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Lags(LagsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Directions(DirectionsSEXP);
    Rcpp::traits::input_parameter< double >::type distTolerance(distToleranceSEXP);
    Rcpp::traits::input_parameter< double >::type Step(StepSEXP);
    Rcpp::traits::input_parameter< double >::type angTolerance(angToleranceSEXP);
    rcpp_result_gen = Rcpp::wrap(empTraceCrossVariogram(Coords, Fs, SFs, Lags, Directions, distTolerance, Step, angTolerance));
    return rcpp_result_gen;
END_RCPP
}
// isoCoordinates
NumericMatrix isoCoordinates(NumericMatrix CoordsF1, NumericMatrix CoordsF2);
RcppExport SEXP _fdagstat_isoCoordinates(SEXP CoordsF1SEXP, SEXP CoordsF2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type CoordsF1(CoordsF1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type CoordsF2(CoordsF2SEXP);
    rcpp_result_gen = Rcpp::wrap(isoCoordinates(CoordsF1, CoordsF2));
    return rcpp_result_gen;
END_RCPP
}
// empTracePseudoCrossVariogram
NumericMatrix empTracePseudoCrossVariogram(NumericMatrix primaryCoords, NumericMatrix Fs, NumericMatrix secondaryCoords, NumericMatrix SFs, NumericVector Lags, NumericMatrix Directions, double distTolerance, double Step, double angTolerance);
RcppExport SEXP _fdagstat_empTracePseudoCrossVariogram(SEXP primaryCoordsSEXP, SEXP FsSEXP, SEXP secondaryCoordsSEXP, SEXP SFsSEXP, SEXP LagsSEXP, SEXP DirectionsSEXP, SEXP distToleranceSEXP, SEXP StepSEXP, SEXP angToleranceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type primaryCoords(primaryCoordsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Fs(FsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type secondaryCoords(secondaryCoordsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type SFs(SFsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Lags(LagsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Directions(DirectionsSEXP);
    Rcpp::traits::input_parameter< double >::type distTolerance(distToleranceSEXP);
    Rcpp::traits::input_parameter< double >::type Step(StepSEXP);
    Rcpp::traits::input_parameter< double >::type angTolerance(angToleranceSEXP);
    rcpp_result_gen = Rcpp::wrap(empTracePseudoCrossVariogram(primaryCoords, Fs, secondaryCoords, SFs, Lags, Directions, distTolerance, Step, angTolerance));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_fdagstat_empTraceVariogram", (DL_FUNC) &_fdagstat_empTraceVariogram, 8},
    {"_fdagstat_empTraceCrossVariogram", (DL_FUNC) &_fdagstat_empTraceCrossVariogram, 8},
    {"_fdagstat_isoCoordinates", (DL_FUNC) &_fdagstat_isoCoordinates, 2},
    {"_fdagstat_empTracePseudoCrossVariogram", (DL_FUNC) &_fdagstat_empTracePseudoCrossVariogram, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_fdagstat(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
